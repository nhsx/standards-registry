on:
  workflow_call:
    inputs:
      environment:
        description: 'Which environment to deploy to [dev|test|prod]'
        required: true
        type: string
      pages_ckan_url:
        default: 'https://manage.standards.nhs.uk/api/action'
        description: 'The url used to read static page information from'
        required: false
        type: string
      ecr_repository:
        default: nhsx-standards-directory
        description: 'The ECR registry to use for the built image'
        required: false
        type: string

    secrets:
      ckan_url:
        description: 'The ckan url to use, e.g. https://manage.dev.standards.nhs.uk/api/action'
        required: true
      tracking_id:
        required: true
      google_tag_id:
        required: true
      ecr_registry:
        required: true
      kubeconfig_file:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      google_site_code:
        required: true
jobs:
  container-and-helm:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ui
    env:
      AWS_REGION: eu-west-2
      IMAGE_TAG: ui-${{ github.sha }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: configure credentials (using us-east-1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.aws_access_key_id }}
          password: ${{ secrets.aws_secret_access_key }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: build and push
        id: build-image
        run: |
          # Build a docker container and push it to ECR
          docker build \
          --build-arg NEXT_PUBLIC_ENV=${{ inputs.environment }} \
          --build-arg NEXT_PUBLIC_TAG_ID=${{ secrets.google_tag_id }} \
          --build-arg NEXT_PUBLIC_TRACKING_ID=${{ secrets.tracking_id }} \
          --build-arg NEXT_PUBLIC_SITE_CODE=${{ secrets.google_site_code }} \
          -t ${{ inputs.ecr_repository }}:$IMAGE_TAG .
          docker tag ${{ inputs.ecr_repository }}:$IMAGE_TAG ${{ secrets.ecr_registry }}/${{ inputs.ecr_repository }}:$IMAGE_TAG
          docker push ${{ secrets.ecr_registry }}/${{ inputs.ecr_repository }}:$IMAGE_TAG

      - name: update helm
        uses: koslib/helm-eks-action@v1.25.2
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kubeconfig_file }}
        with:
          command: >-
            helm upgrade --debug --install --wait -n ${{inputs.environment}} ui ./charts/ui
            --set ui.config.ckanurl='${{ secrets.ckan_url }}'
            --set ui.config.tracking_id='${{ secrets.tracking_id }}'
            --set ui.config.google_tag_id='${{ secrets.google_tag_id }}'
            --set ui.container.image=${{ secrets.ecr_registry }}/${{ inputs.ecr_repository }}:$IMAGE_TAG
            --set ui.config.pagesckanurl=${{ inputs.pages_ckan_url }}
            --set ui.config.environment=${{ inputs.environment }}
            --set ui.config.google_site_code=${{ inputs.google_site_code }}
